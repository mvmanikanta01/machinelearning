import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
data = pd.read_csv(r'Admission_Prediction.csv')
print(data)
print('data is  \n ',data.info)
print(data.describe())
plt.scatter(data['TOEFL Score'], data['Chance of Admit'])
plt.show()

X1 = data.iloc[:,2:3].values
Y1 = data.iloc[:,-1].values
print(X1.shape)

from sklearn.impute import  SimpleImputer
imputer = SimpleImputer(missing_values=np.nan,strategy="mean")
X1[:,:2] = imputer.fit_transform(X1[:,:2])
print('X1 is below \n',X1)

from sklearn.model_selection import train_test_split
X1_train,X1_test,Y1_train,Y1_test = train_test_split(X1,Y1,test_size=0.2, random_state=0)
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X1_train,Y1_train)

print(" Intercept value is = ",regressor.intercept_)
print(' Coefficient value is = ',regressor.coef_)

# making prediction of X1
Y1_pred = regressor.predict(X1_test)
output_df = pd.DataFrame({'Actual':Y1_test,'Predicted':Y1_pred})
print(" Actual and predicted values of tofel vs coa==\n",output_df)
plt.scatter(X1_test,Y1_test,color = 'black')
plt.plot(X1_test,Y1_pred,color = 'blue',linewidth=3)
plt.xticks(())
plt.yticks(())
plt.show()

import numpy as np
from sklearn import metrics
explained_variance= metrics.explained_variance_score(Y1_test,Y1_pred)
mean_absolute_error = metrics.mean_absolute_error(Y1_test,Y1_pred)
mse = metrics.mean_squared_error(Y1_test,Y1_pred)
mean_squared_log_error = metrics.mean_squared_log_error(Y1_test,Y1_pred)
median_absolute_error = metrics.median_absolute_error(Y1_test,Y1_pred)
r2 = metrics.r2_score(Y1_test,Y1_pred)
print('Explained variance =',round(explained_variance,2))
print('Mean squared  log error = ',round(mean_squared_log_error,2))
print('R-sqaure = ',round(r2,4))
print('Mean absolute error  MAE = ',round(mean_absolute_error,2))
print('Mean square error MSE = ',round(mse,2))
print('Root mean square value RMSE = ',round(np.sqrt(mse),2))
from statsmodels.api import OLS
import statsmodels.api as sm
X1 = sm.add_constant(X1)
summ = OLS(Y1,X1).fit().summary()
print(" summary of the data set is \n ",summ)
